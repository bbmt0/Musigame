name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-bff:
    name: Build bff
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bff
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Copy Firebase Config
        run: |
          mkdir -p src/main/resources/configuration
          echo '${{ secrets.FIREBASE_CONFIG }}' > src/main/resources/configuration/firebase_key.json

      - name: Copy Firebase Config Test
        run: |
          mkdir -p src/test/resources/configuration
          echo '${{ secrets.FIREBASE_CONFIG_TEST }}' > src/test/resources/configuration/firebase_key.json

      - name: Ensure build directory exists
        run: mkdir -p build/libs

      - name: Build and test bff
        run: ./gradlew clean build jacocoTestReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: List build artifacts after build
        run: ls -al build/libs/

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: bff-jar
          path: bff/build/libs/musigame-0.0.1-SNAPSHOT.jar

      - name: Upload build artifacts for debugging
        uses: actions/upload-artifact@v2
        with:
          name: debug-build-libs
          path: bff/build/libs/

      - name: Analyze Backend on SonarCloud
        run: ./gradlew sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-bff:
    name: Deploy bff
    runs-on: ubuntu-latest
    needs: build-bff
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: List files before download
        run: ls -al

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: bff-jar
          path: build/libs/

      - name: List files after download
        run: ls -al build/libs/

      - name: Deploy bff to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'musigame-bff'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BFF }}
          package: 'build/libs/*.jar'
      
      - name: Set start up command to launch jar file
        run : |
            az webapp config set --resource-group musigame --name musigame-bff --startup-file "java -jar musigame-0.0.1-SNAPSHOT.jar"
        env:
            AZURE_WEBAPP_PUBLISH_PROFILE_BFF: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BFF }}
        
  build-front:
    name: Build front
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  

      - name: Install & build
        run: |
          npm install
          npm run build --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: front-build
          path: front/build

  deploy-front:
    name: Deploy front
    runs-on: ubuntu-latest
    needs: build-front
    steps:
      
      - name: list files in directory
        run: ls -al

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: front-build
          path: front/build

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy front to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'musigame-front'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONT }}
          package: front/build
