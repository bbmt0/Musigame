name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bff
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Copy Firebase Config
        run: |
          mkdir -p src/main/resources/configuration
          echo '${{ secrets.FIREBASE_CONFIG }}' > src/main/resources/configuration/firebase_key.json

      - name: Copy Firebase Config Test
        run: |
          mkdir -p src/test/resources/configuration
          echo '${{ secrets.FIREBASE_CONFIG_TEST }}' > src/test/resources/configuration/firebase_key.json

      - name: Build and Test Backend
        run: ./gradlew clean build jacocoTestReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analyze Backend on SonarCloud
        run: ./gradlew sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Deploy Backend to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'musigame-bff'  
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BFF }}
          package: 'build/libs/*.jar'

  build-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node

      - name: Install dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build

      - name: Deploy Frontend to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'musigame-front'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONT }}
          package: './build'
